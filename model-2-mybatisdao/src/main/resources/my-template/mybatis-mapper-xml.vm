<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

#set($objectName=$class.objectName)
#set($name=$class.name)
#set($tableAlias=$class.tableAlias)
#set($param=$class.param)

<mapper namespace="${config.mapperPackage}.${class.name}Mapper">
	<resultMap id="${objectName}Map" type="${objectName}">
		#foreach($column in $class.fields)
			#set($be = "<id")
			#if($column.isPk!="1")
				#set($be = "<result")
			#end

		$be column="${column.name}" property="${column.columnName}"/>
		#end

	</resultMap>



	<select id="load" parameterType="${class.pkField.type}" resultMap="${objectName}Map" >
		select * from ${name} where ${class.pkField.columnName}=#{${class.pkField.name}}
	</select>




    <insert id="insert" parameterType="${objectName}">
        insert into
		${name}(
		${class.pkField.columnName}
		#foreach($column in $class.fields)

		<if test="${column.name} != null">,$column.columnName</if>
		#end

        )values(
        #{${class.pkField.columnName}}
		#foreach($column in $class.fields)

		<if test="${column.name} != null">,#{${column.name},jdbcType=$column.jdbcType}</if>
		#end

		)
    </insert>

    <update id="update" parameterType="${objectName}">
        update ${name}
        <set>
			#foreach($column in $class.fields)

		<if test="${column.name} != null">${column.name}=#{${column.name},jdbcType=$column.jdbcType},</if>
			#end
        </set>
        where  ${class.pkField.name}=#{${class.pkField.name}}
    </update>


    <select id="delete" parameterType="${class.pkField.type}" >
    	delete from ${name} where  ${class.pkField.name}=#{${class.pkField.name}}
    </select>


    <sql id="queryCommonSql">
        FROM $name $tableAlias
        <where>
			#foreach($field in $class.fields)
				#set($type=${field.type})
				#set($length=${field.length})
				#set($fieldName=${field.name})
				#set($columnName=${field.columnName})
			##$Length
				#if($field.isPk=="1")

			<if test="${fieldName}Array != null">
				${tableAlias}.${columnName} in
				<foreach collection="${fieldName}Array" index="index" item="item" open="(" separator="," close=")">#{item}</foreach>
			</if>

			#else
				#if($type=="Integer" || $type=="Long" || $type=="int")

			<if test="${fieldName} != null">and ${tableAlias}.${columnName} = #{${fieldName}}  </if>
				#elseif("$type"=="Date")

			<if test="${fieldName}From != null">and ${tableAlias}.${columnName} >= #{${fieldName}From}</if>

			<if test="${fieldName}To != null">

 				<![CDATA[and ${tableAlias}.${fieldName} < date_add(#{${name}To}, interval 1 day)]]>

			</if>

					#else

			<if test="${fieldName} != null and ${fieldName}.trim() !=''">and ${tableAlias}.${columnName} = #{${fieldName}}</if>

					#end
				#end

			#end

        </where>
    </sql>


    <sql id="sortSql">
        <choose>
            <when test="sort != null and sort.trim() !=''">
                order by ${sort}
            </when>
        </choose>
    </sql>
	
	<sql id="page">
		limit ${StartRowBegin},${pageSize}
	</sql>

    <select id="queryCount" parameterType="${objectName}Query" resultType="int">
        select count(1)
        <include refid="queryCommonSql" />
    </select>

    <select id="queryList" parameterType="${objectName}Query" resultMap="${objectName}Map">
        select ${class.pkField.columnName}
        <choose>
            <when test="columns != null and columns.length>0">
				<foreach collection="columns" index="index" item="item">,${item}</foreach>
            </when>
            <otherwise>
				#foreach($filed in $class.fields)
					#if($filed.isPk != 1)

				,${tableAlias}.${filed.columnName}
					#end
				#end

            </otherwise>
        </choose>
        <include refid="queryCommonSql" />
        <include refid="sortSql" />
        <include refid="page" />
    </select>

</mapper>