
import java.util.HashMap;
import java.util.Map;

/**
*$!{outputor.comment}字段
*/
public enum ${outputor.className}Columns {
	#foreach($column in $outputor.fieldUnits)
		/**$!column.comment*/
		${column.columnName}("${column.fieldName}", "${column.columnName}"),			
	#end
	;

	private String property;
	private String column;
	private String alias;

	private static Map<String, ${outputor.className}Columns> pool = new HashMap<String, ${outputor.className}Columns>();

	static {
		for (${outputor.className}Columns each : ${outputor.className}Columns.values()) {
			${outputor.className}Columns defined = pool.get(each.getProperty());
			if (null != defined) {
				throw new java.lang.IllegalArgumentException(defined.toString() + " defined as same code with " + each.toString());
			}
			pool.put(each.getProperty(), each);
		}
	}
	private ${outputor.className}Columns(String property, String column) {		
		this.property = property;
		this.column = "${outputor.tableAlias}." + column;
		this.alias = this.column + " as ${outputor.name}_" + column;
	}
	
	/**表别名.列名*/
	public String getColumn() {
		return column;
	}
	
	public String getProperty() {
		return property;
	}
	
	/**表别名.列名 as 表名_列名*/
	public String getAlias() {
		return alias;
	}		
	public static ${outputor.className}Columns valueOfProperty(String property) {
		return pool.get(property);
	}
}