<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="org.xyy.smart.dao.example.mapper.UserMapper">
	<resultMap id="userMap" type="user">
					
		<id column="id" property="id"/>
								
		<result column="createtime" property="createtime"/>
								
		<result column="isGirl" property="is_girl"/>
								
		<result column="name" property="name"/>
								
		<result column="age" property="age"/>
								
		<result column="address" property="address"/>
		
	</resultMap>



	<select id="load" parameterType="Long" resultMap="userMap" >
		select * from User where id=#{id}
	</select>




    <insert id="insert" parameterType="user">
        insert into
		User(
		id
		
		<if test="id != null">,id</if>
		
		<if test="createtime != null">,createtime</if>
		
		<if test="isGirl != null">,is_girl</if>
		
		<if test="name != null">,name</if>
		
		<if test="age != null">,age</if>
		
		<if test="address != null">,address</if>
		
        )values(
        #{id}
		
		<if test="id != null">,#{id,jdbcType=BIGINT}</if>
		
		<if test="createtime != null">,#{createtime,jdbcType=TIMESTAMP}</if>
		
		<if test="isGirl != null">,#{isGirl,jdbcType=BIGINT}</if>
		
		<if test="name != null">,#{name,jdbcType=VARCHAR}</if>
		
		<if test="age != null">,#{age,jdbcType=BIGINT}</if>
		
		<if test="address != null">,#{address,jdbcType=VARCHAR}</if>
		
		)
    </insert>

    <update id="update" parameterType="user">
        update User
        <set>
			
		<if test="id != null">id=#{id,jdbcType=BIGINT},</if>
			
		<if test="createtime != null">createtime=#{createtime,jdbcType=TIMESTAMP},</if>
			
		<if test="isGirl != null">isGirl=#{isGirl,jdbcType=BIGINT},</if>
			
		<if test="name != null">name=#{name,jdbcType=VARCHAR},</if>
			
		<if test="age != null">age=#{age,jdbcType=BIGINT},</if>
			
		<if test="address != null">address=#{address,jdbcType=VARCHAR},</if>
			        </set>
        where  id=#{id}
    </update>


    <select id="delete" parameterType="Long" >
    	delete from User where  id=#{id}
    </select>


    <sql id="queryCommonSql">
        FROM User U
        <where>
										
			<if test="idArray != null">
				U.id in
				<foreach collection="idArray" index="index" item="item" open="(" separator="," close=")">#{item}</foreach>
			</if>

			
														
			<if test="createtimeFrom != null">and U.createtime >= #{createtimeFrom}</if>

			<if test="createtimeTo != null">

 				<![CDATA[and U.createtime < date_add(#{UserTo}, interval 1 day)]]>

			</if>

									
														
			<if test="isGirl != null">and U.is_girl = #{isGirl}  </if>
								
														
			<if test="name != null and name.trim() !=''">and U.name = #{name}</if>

									
														
			<if test="age != null">and U.age = #{age}  </if>
								
														
			<if test="address != null and address.trim() !=''">and U.address = #{address}</if>

									
			
        </where>
    </sql>


    <sql id="sortSql">
        <choose>
            <when test="sort != null and sort.trim() !=''">
                order by ${sort}
            </when>
        </choose>
    </sql>
	
	<sql id="page">
		limit ${startRowBegin},${pageSize}
	</sql>

    <select id="queryCount" parameterType="userQuery" resultType="int">
        select count(1)
        <include refid="queryCommonSql" />
    </select>

    <select id="queryList" parameterType="userQuery" resultMap="userMap">
        select id
        <choose>
            <when test="columns != null and columns.length>0">
				<foreach collection="columns" index="index" item="item">,${item}</foreach>
            </when>
            <otherwise>
																		
				,U.createtime
														
				,U.is_girl
														
				,U.name
														
				,U.age
														
				,U.address
									
            </otherwise>
        </choose>
        <include refid="queryCommonSql" />
        <include refid="sortSql" />
        <include refid="page" />
    </select>

</mapper>